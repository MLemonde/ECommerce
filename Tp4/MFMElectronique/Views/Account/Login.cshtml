@using MFMElectronique.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
<section id="loginForm">
    <div class="login">
        <div class="wrap">
            <div class="col_1_of_login span_1_of_login">
                <h4 class="title">New Customers</h4>
                <p>Voila des instruction pour les nouveau clients qui veulents s'inscrire</p>
                <div class="button1">
                    <a href="~/Account/Register"><input type="submit" name="Submit" value="Create an Account"></a>
                </div>
                <div class="clear"></div>
            </div>
            <div class="col_1_of_login span_1_of_login">
                <div class="login-title">
                    <h4 class="title">Registered Customers</h4>
                    <div id="loginbox" class="loginbox">

                        <form action="Login" method="post" name="login" id="login-form">
                            @Html.AntiForgeryToken()
                            <fieldset class="input">
                                <p id="login-form-username">
                                    <label for="modlgn_username">@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })</label><br />
                                    @Html.TextBoxFor(m => m.Email, new { @class = "inputbox", size = "18", autocomplete = "off" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                    @*<label for="modlgn_username">Email</label>
                                        <input id="modlgn_username" type="text" name="email" class="inputbox" size="18" autocomplete="off">*@
                                </p>
                                <p id="login-form-password">
                                    <label for="modlgn_passwd">@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })</label>
                                    @Html.PasswordFor(m => m.Password, new { @class = "inputbox", size = "18", autocomplete = "off" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                    @*<label for="modlgn_passwd">Password</label>
                                        <input id="modlgn_passwd" type="password" name="password" class="inputbox" size="18" autocomplete="off">*@
                                </p>
                                <div class="checkbox">
                                    @Html.CheckBoxFor(m => m.RememberMe)
                                    @Html.LabelFor(m => m.RememberMe)
                                </div>
                                <div class="remember">
                                    <p id="login-form-remember">
                                        @Html.ActionLink("Forgot Password?","ResetPass")
                                        
                                    </p>
                                    @*<input type="submit" value="Log in" class="btn btn-default" />*@
                                    <input type="submit" name="Submit" class="button1" value="Log in"><div class="clear"></div>
                                </div>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
            <div class="clear"></div>
        </div>
    </div>
</section>
@*<h2>@ViewBag.Title.</h2>
        <div class="row">
            <div class="col-md-8">
                <section id="loginForm">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <h4>Use a local account to log in.</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(m => m.RememberMe)
                                    @Html.LabelFor(m => m.RememberMe)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Log in" class="btn btn-default" />
                            </div>
                        </div>
                        <p>
                            @Html.ActionLink("Register as a new user", "Register")
                        </p>
                        @* Enable this once you have account confirmation enabled for password reset functionality
                            <p>
                                @Html.ActionLink("Forgot your password?", "ForgotPassword")
                            </p>
                }
            </section>
        </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
