@model MFMElectronique.ViewModels.ProductAdminViewModel

@{
    ViewBag.Title = "Edit";
}

<form action="" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <div style="text-align:center">
        <h2>@ViewBag.Title</h2>

        <div class="clear"></div>
        <div class="register_account">
            <div class="wrap">
                <h4 class="title">Create a new item</h4>
                <div>
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name, new { @class = "inputbox" })
                    @Html.ValidationMessageFor(m => m.Name, "")
                </div>
                <br />

                <div>
                    @Html.LabelFor(m => m.Price) $
                    @Html.EditorFor(m => m.Price)
                    @Html.ValidationMessageFor(m => m.Price)
                    |
                    @Html.LabelFor(m => m.CategoryID)
                    @Html.DropDownListFor(m => m.CategoryID, null)
                    @Html.ValidationMessageFor(m => m.CategoryID)
                    |
                    @Html.LabelFor(m => m.BrandID)
                    @Html.DropDownListFor(m => m.BrandID, null)
                    @Html.ValidationMessageFor(m => m.BrandID)
                </div>
                <br />
                <div>
                    @Html.LabelFor(m => m.discontinued)
                    @Html.EditorFor(m => m.discontinued)
                    @Html.ValidationMessageFor(m => m.discontinued)
                </div>
                <br />
                <div>
                    @Html.LabelFor(m => m.DescriptionFR)
                    @Html.TextAreaFor(m => m.DescriptionFR, new { @class = "ckeditor", @id = "text-details" })
                    @Html.ValidationMessageFor(m => m.DescriptionFR)
                </div>
                <br />
                <div>
                    @Html.LabelFor(m => m.DescriptionEN)
                    @Html.TextAreaFor(m => m.DescriptionEN, new { @class = "ckeditor", @id = "text-details" })
                    @Html.ValidationMessageFor(m => m.DescriptionEN)
                </div>
                <br />
                <div>
                    @Html.LabelFor(m => m.ImageUpload)
                    @Html.EditorFor(m => m.ImageUpload)
                    @Html.ValidationMessageFor(m => m.ImageUpload)
                </div>
                <br />
                <div class="button1">
                    <input type="submit" class="button" value="Create Item" name="Create Item">
                </div>
                <div class="clear"></div>
                <br />
            </div>
        </div>
    </div>
</form>


@*<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionFR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescriptionFR, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescriptionFR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionEN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescriptionEN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescriptionEN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.discontinued, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.discontinued)
                    @Html.ValidationMessageFor(model => model.discontinued, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PictureURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PictureURL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PictureURL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandID, "BrandID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BrandID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
