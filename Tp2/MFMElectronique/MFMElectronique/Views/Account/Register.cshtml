@model MFMElectronique.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="clear"></div>
    <div class="register_account">
        <div class="wrap">
            <h4 class="title">Create an Account</h4>
            <form>
                <div class="col_1_of_2 span_1_of_2">
                    @*@Html.ValidationSummary("", new { @class = "text-danger" })*@

                    @Html.LabelFor(m => m.FirstName)
                    <div>@Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FirstName, "")</div><br />
                    
                    @Html.LabelFor(m => m.LastName)
                    <div>@Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastName)</div><br />
                    
                    @Html.LabelFor(m => m.Email)
                    <div>@Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email)</div><br>
                    
                    @Html.LabelFor(m => m.Password)
                    <div>@Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password)</div>
                    
                    @Html.LabelFor(m => m.ConfirmPassword)
                    <div>@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)</div>

                    @*<div><input type="text" value="Name" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Name';}"></div>
                    <div><input type="text" value="Company Name" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Company Name';}"></div>
                    <div><input type="text" value="E-Mail" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'E-Mail';}"></div>
                    <div><input type="text" value="password" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'password';}"></div>*@
                </div>
                <div class="col_1_of_2 span_1_of_2">
                    @Html.LabelFor(m => m.Address)
                    <div>@Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address)</div><br>

                    @Html.LabelFor(m => m.City)
                    <div>@Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.City)</div><br>

                    @Html.LabelFor(m => m.PostalCode)
                    <div>@Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PostalCode)</div><br>

                    @Html.LabelFor(m => m.Country)
                    <div>@Html.TextBoxFor(m => m.Country, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Country)</div><br>

                    @Html.LabelFor(m => m.State)
                    <div>@Html.TextBoxFor(m => m.State, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.State)</div><br>

                    @Html.LabelFor(m => m.Phone)
                    <div>
                        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Phone)</div><br>


                    @*Exemple with JavaScript enabled
                    @Html.LabelFor(m => m.Phone)
                    <div>@Html.TextBoxFor(m => m.Phone, new { Value = "E-Mail", onfocus = "this.value = ''", onblur = "if (this.value == '') {this.value = 'E-Mail';}" })
                    @Html.ValidationMessageFor(m => m.Phone)</div><br>*@

                    @*<div><input type="text" value="Address" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'Address';}"></div>
                    <div>
                        <select id="country" name="country" onchange="change_country(this.value)" class="frm-field required">
                            <option value="null">Select a Country</option>
                            <option value="CA">Canada</option>
                            <option value="UN">United-States</option>
                            <option value="ME">Mexico</option>
                        </select>
                    </div>
                    <div><input type="text" value="City" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = 'City';}"></div>
                    <div>
                    </div>
                    <input type="text" value="" class="code"> - <input type="text" value="" class="number">
                    <p class="code">Country Code + Phone Number</p>*@
                    <button class="grey">Submit</button>
                    <p class="terms">By clicking 'Create Account' you agree to the <a href="#">Terms &amp; Conditions</a>.</p>
                </div>
                <div class="clear">
                    <h4>We accept new customers in Canada and US only</h4>
                </div>
            </form>
        </div>
    </div>


    @*<h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>*@
}

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
}
